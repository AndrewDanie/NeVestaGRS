Index: core/view/AppContext.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from core.controller.Controller import Controller\r\nfrom core.controller.util_functions import parse_yaml\r\nfrom core.view.TkWindow import Window, TkGuiBuilder\r\n\r\n\r\nclass TkAppContext:\r\n    \"\"\"\r\n    Класс, осуществляющий внедрение зависимостей между графическим интерфейсом Tkinter'а и логикой приложения\r\n    Имеет доступ к объектам Window, не должен иметь доступа к WindowBuilder\r\n    \"\"\"\r\n\r\n    def __init__(self):\r\n        self.app_properties = parse_yaml('properties.yml')\r\n        self.window_config = parse_yaml('view\\\\window_config.yml')\r\n        print(self.app_properties)\r\n        self.window = Window(self.app_properties['application_name'])\r\n        self.builder = TkGuiBuilder(self.window)\r\n        self.controller = Controller(self.window)\r\n\r\n    def run_app(self):\r\n        self.make_context('Главное меню')\r\n\r\n    def make_context(self, window_name):\r\n        \"\"\"\r\n        Внедряет зависимости между кнопками и логикой приложения\r\n        \"\"\"\r\n        if window_name not in self.window_config or self.window_config[window_name] is None:\r\n            raise Exception(f'Нет окна с названием {window_name}')\r\n        window_data = self.window_config[window_name]\r\n        template = window_data['gui_template']\r\n\r\n        if template == 'main_menu':\r\n            self.builder.build_main_menu(self.window_config)\r\n            buttons = self.builder.button_list\r\n            for button in buttons:\r\n                window_name = button.cget('text')\r\n                window_data = self.window_config[button.cget('text')]\r\n                callback = None\r\n                if window_data is not None:\r\n                    callback = lambda e, lbl=window_name: self.make_context(lbl)\r\n                button.bind('<Button-1>', callback)\r\n            self.window.mainloop()\r\n\r\n        elif template == 'default_calculator':\r\n            self.builder.build_default_calculator(window_name, window_data)\r\n            back_to_menu_button = self.window.widgets['button']['__to_main_menu__']\r\n            back_to_menu_button.bind('<Button-1>', lambda e: self.run_app())\r\n            buttons = window_data['widgets']['button']\r\n            for name in buttons:\r\n                button = self.window.widgets['button'][name]\r\n                callback = None\r\n                if name[:2] != '__':\r\n                    callback = lambda e, func=name: self.controller.run(func)\r\n                button.bind('<Button-1>', callback)\r\n\r\n        elif template == 'plot':\r\n            self.builder.build_plot_window()\r\n\r\n    def get_window(self):\r\n        return self.window
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/view/AppContext.py b/core/view/AppContext.py
--- a/core/view/AppContext.py	(revision 15b30bdd2bfd29aa77450e27a17e3ead740036c1)
+++ b/core/view/AppContext.py	(date 1724863281974)
@@ -12,7 +12,6 @@
     def __init__(self):
         self.app_properties = parse_yaml('properties.yml')
         self.window_config = parse_yaml('view\\window_config.yml')
-        print(self.app_properties)
         self.window = Window(self.app_properties['application_name'])
         self.builder = TkGuiBuilder(self.window)
         self.controller = Controller(self.window)
Index: core/view/TkWindow.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from tkinter import *\r\nfrom tkinter import ttk\r\nfrom tkinter.scrolledtext import ScrolledText\r\nfrom matplotlib.backends.backend_tkagg import FigureCanvasTkAgg, NavigationToolbar2Tk\r\nfrom matplotlib import pyplot as plt\r\n\r\n\r\nfrom core.model.functions.variables import cache_variable_dict\r\nfrom core.model.repository import callback\r\nfrom core.view.IView import IView\r\n\r\n\r\nclass Window(IView):\r\n\r\n    def __init__(self, title, size='800x600', ):\r\n        self.root = Tk()\r\n        self.title = self.root.title(title)\r\n        self.geometry = self.root.geometry(size)\r\n        self.widgets = {\r\n            'input': {},\r\n            'button': {},\r\n            'output': {},\r\n            'plot': {},\r\n        }\r\n\r\n    def mainloop(self):\r\n        self.root.mainloop()\r\n\r\n    def clear_window(self):\r\n        for slave in self.root.winfo_children():\r\n            slave.destroy()\r\n\r\n    def clear_output_window(self):\r\n        output_txt_field = self.widgets['output']['__txt_field__']\r\n        output_txt_field.configure(state='normal')\r\n        output_txt_field.delete(1.0, END)\r\n        output_txt_field.configure(state='disable')\r\n\r\n    def get_widget(self, parameter_path):\r\n        path = parameter_path.split('.')\r\n        folder = self.widgets\r\n        for elem in path:\r\n            try:\r\n                folder = folder[elem]\r\n            except:\r\n                raise Exception('Неверный путь к виджету!')\r\n\r\n        widget = folder\r\n        return widget\r\n\r\n    def get_data(self, parameter_path : str):\r\n        widget = self.get_widget(parameter_path)\r\n        return widget.get()\r\n\r\n    def set_data(self, parameter_path, output_entity):\r\n        widget = self.get_widget(parameter_path)\r\n        widget.configure(state='normal')\r\n        for name in output_entity:\r\n            widget.insert(INSERT, cache_variable_dict[name] + ' = ' + str(output_entity[name]) + '\\n')\r\n        widget.configure(state='disable')\r\n\r\n\r\nclass TkGuiBuilder:\r\n    \"\"\"\r\n    Строитель графического интерфейса\r\n    Единственный класс, который должен иметь доступ к созданию объектов Tkinter'а\r\n    \"\"\"\r\n    def __init__(self, window):\r\n        self.window = window\r\n        self.root = window.root\r\n        self.widgets = window.widgets\r\n\r\n    def set_window(self, window):\r\n        self.window = window\r\n        self.root = window.root\r\n        self.widgets = window.widgets\r\n\r\n    def make_default_frames(self, label):\r\n        Label(self.root, text=label, font=('Arial Bold', 18)).pack(pady=15)\r\n        main_menu_button = Button(self.root,\r\n               name='to_main_menu_button',\r\n               text='Главное меню', font=(\"Arial Bold\", 10))\r\n        main_menu_button.place(anchor=NE, relx=1, x=-15, y=15)\r\n        self.widgets['button']['__to_main_menu__'] = main_menu_button\r\n        left_frame = ttk.Frame(master=self.root,\r\n                               name='left_frame',\r\n                               borderwidth=1, relief=SOLID, padding=[8, 10])\r\n        left_frame.place(relheight=1, relwidth=0.7, rely=0.1)\r\n        right_frame = ttk.Frame(master=self.root,\r\n                                name='right_frame',\r\n                                borderwidth=1, relief=SOLID, padding=[8, 10])\r\n        right_frame.place(relheight=1, relwidth=0.3, rely=0.1, relx=0.7)\r\n\r\n    def add_output_block(self, master_widget, pack_side=TOP):\r\n        \"\"\"\r\n        Добавляет блок вывода, состоящий из текстового поля вывода и кнопки очистки этого поля\r\n        \"\"\"\r\n        output_txt_field = ScrolledText(master_widget,\r\n                                  height=20, state='disabled')\r\n        output_txt_field.pack(fill=X, side=pack_side)\r\n        self.widgets['output']['__txt_field__'] = output_txt_field\r\n        Button(master_widget,\r\n               text='Очистить окно вывода',\r\n               font=(\"Arial Bold\", 10),\r\n               command=self.window.clear_output_window).pack(pady=10, side=pack_side)\r\n\r\n    def add_input_block(self, master_widget, input_data, pack_side=TOP):\r\n        \"\"\"\r\n        Добавляет блок ввода, состоящий из текстовых полей ввода\r\n        \"\"\"\r\n        for label in input_data:\r\n            frame = ttk.Frame(master_widget,\r\n                              borderwidth=1, padding=[4, 5])\r\n            frame.pack(fill=X, side=pack_side)\r\n            lbl_text = label[2:] if label[:2] == '__' else cache_variable_dict[label]\r\n            Label(frame, text=lbl_text, font=('Arial Bold', 10)).pack(side=LEFT)\r\n            entry = Entry(master=frame,\r\n                          width=10, justify='center')\r\n            entry.pack(side=LEFT)\r\n            self.widgets['input'][label] = entry\r\n\r\n    def add_buttons_block(self, master_widget, button_data, pack_side=TOP):\r\n        \"\"\"\r\n        Добавляет блок кнопок, рассчитывающих параметры\r\n        \"\"\"\r\n        for label in button_data:\r\n            frame = ttk.Frame(master=master_widget,\r\n                              borderwidth=1, padding=[4, 5])\r\n            frame.pack(fill=X, side=pack_side)\r\n            lbl_text = label\r\n            button = Button(master=frame,\r\n                text=lbl_text,\r\n                font=(\"Arial Bold\", 10),\r\n            )\r\n            button.pack(side=LEFT)\r\n            self.widgets['button'][label] = button\r\n\r\n    def add_combobox(self, master_widget, combobox_data, values, pack_side=TOP):\r\n        \"\"\"\r\n        Добавляет блок ввода, состоящий из комбобоксов\r\n        \"\"\"\r\n        for label in combobox_data:\r\n            frame = ttk.Frame(master=master_widget,\r\n                              borderwidth=1, padding=[8, 10])\r\n            frame.pack(fill=X, side=pack_side)\r\n            lbl_text = label[2:] if label[:2] == '__' else cache_variable_dict[label]\r\n            Label(frame, text=lbl_text, font=('Arial Bold', 10)).pack(side=LEFT)\r\n            combo = ttk.Combobox(frame, name=label)\r\n            combo['values'] = callback.get_grs_name_set()\r\n            combo.current(0)\r\n            combo.pack(side=LEFT)\r\n            self.widgets['input'][label] = combo\r\n\r\n    def add_empty_space(self, master_widget, amount=30, pack_side=TOP):\r\n        \"\"\"\r\n        Добавляет блок пустоты, заданный по amount\r\n        \"\"\"\r\n        Label(master_widget, text=\"\", font=('Arial Bold', 10)).pack(pady=amount, side=pack_side)\r\n\r\n    def add_plot_example(self, master_widget):\r\n        \"\"\"\r\n        Добавляет демонстрационный график mathplotlib'а\r\n        \"\"\"\r\n        from matplotlib.figure import Figure\r\n\r\n        fig = Figure(figsize=(5, 5), dpi=100)\r\n        y = [i ** 2 for i in range(101)]\r\n        plt.subplots_adjust(left=0.1, right=0.9, top=0.9, bottom=0.1)\r\n        plot1 = fig.add_subplot(111)\r\n\r\n        plot1.plot(y)\r\n        canvas = FigureCanvasTkAgg(fig, master=master_widget)\r\n        canvas.draw()\r\n        canvas.get_tk_widget().pack()\r\n        self.widgets['plot']['__example__'] = canvas\r\n\r\n    def build_default_calculator(self, window_name, window_data):\r\n        self.window.clear_window()\r\n        self.make_default_frames(window_name)\r\n        right_frame = self.root.nametowidget(\"right_frame\")\r\n        left_frame = self.root.nametowidget(\"left_frame\")\r\n        self.add_output_block(left_frame)\r\n        widgets = window_data['widgets']\r\n        if 'combobox' in widgets:\r\n            self.add_combobox(right_frame, widgets['combobox'], [1, 2, 3])\r\n        if 'entry' in widgets:\r\n            self.add_input_block(right_frame, widgets['entry'])\r\n        self.add_empty_space(right_frame, pack_side=BOTTOM)\r\n        if 'button' in widgets:\r\n            self.add_buttons_block(right_frame, widgets['button'],pack_side=BOTTOM)\r\n\r\n    def build_main_menu(self, window_config):\r\n        self.window.clear_window()\r\n        Label(self.root, text='НеВеста-ГРС', font=('Arial Bold', 18)).place(relx=0.5, anchor=N, y=30)\r\n        central_frame = ttk.Frame(self.root, borderwidth=1, padding=[4, 5])\r\n        central_frame.pack(expand=True, anchor=CENTER)\r\n        i = 0\r\n        self.button_list = []\r\n        for window_name in window_config:\r\n            if window_name == 'Главное меню':\r\n                continue\r\n            frame = ttk.Frame(central_frame, borderwidth=1, padding=[4, 5])\r\n            frame.grid(row=i // 2, column=i % 2)\r\n            button = Button(frame, text=window_name, font=(\"Arial Bold\", 10), width=30)\r\n            button.pack()\r\n            self.button_list.append(button)\r\n            i += 1\r\n\r\n    def build_plot_window(self):\r\n        self.window.clear_window()\r\n        self.make_default_frames('Статистика')\r\n        for i in range(4):\r\n            frame = ttk.Frame(self.root.nametowidget(\"left_frame\"), borderwidth=1, padding=[4, 5])\r\n            frame.grid(row=i // 2, column=i % 2)\r\n            self.add_plot_example(frame)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/view/TkWindow.py b/core/view/TkWindow.py
--- a/core/view/TkWindow.py	(revision 15b30bdd2bfd29aa77450e27a17e3ead740036c1)
+++ b/core/view/TkWindow.py	(date 1724863259852)
@@ -12,21 +12,24 @@
 
 class Window(IView):
 
-    def __init__(self, title, size='800x600', ):
-        self.root = Tk()
-        self.title = self.root.title(title)
-        self.geometry = self.root.geometry(size)
-        self.widgets = {
+    EMPTY_WIDGET_LIST = {
             'input': {},
             'button': {},
             'output': {},
             'plot': {},
         }
 
+    def __init__(self, title, size='800x600', ):
+        self.root = Tk()
+        self.title = self.root.title(title)
+        self.geometry = self.root.geometry(size)
+        self.widgets = Window.EMPTY_WIDGET_LIST
+
     def mainloop(self):
         self.root.mainloop()
 
     def clear_window(self):
+        self.widgets = Window.EMPTY_WIDGET_LIST
         for slave in self.root.winfo_children():
             slave.destroy()
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f607f56e-4ff3-4da4-83f7-2cd0ed8438d4\" name=\"Changes\" comment=\"Добавил SQLAlchemy и объектное представление таблиц grs, unit (ранее - blocks) и composition\">\r\n      <change afterPath=\"$PROJECT_DIR$/core/properties.yml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/core/view/AppContext.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/core/view/IView.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_08_2024_20_49_[Changes]1/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_08_2024_20_49__Changes_1.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_08_2024_18_22_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_08_2024_18_22__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_08_2024_8_52_[Changes]1/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_08_2024_8_52__Changes_1.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/controller/Controller.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/controller/Controller.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/grs_stat.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/grs_stat.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/main.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/view/Window.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/view/TkWindow.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/view/window_config.yml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/view/window_config.yml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;AndrewDanie&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubDefaultAccount\">\r\n    <option name=\"defaultAccountId\" value=\"4b0fb413-7d43-4307-a727-dd18bd93e6c4\" />\r\n  </component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/AndrewDanie/NeVestaGRS.git&quot;,\r\n    &quot;accountId&quot;: &quot;4b0fb413-7d43-4307-a727-dd18bd93e6c4&quot;\r\n  },\r\n  &quot;recentNewPullRequestHead&quot;: {\r\n    &quot;server&quot;: {\r\n      &quot;useHttp&quot;: false,\r\n      &quot;host&quot;: &quot;github.com&quot;,\r\n      &quot;port&quot;: null,\r\n      &quot;suffix&quot;: null\r\n    },\r\n    &quot;owner&quot;: &quot;AndrewDanie&quot;,\r\n    &quot;repository&quot;: &quot;NeVestaGRS&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2kbS5lXM97mLkVvePb8v6kD8Jp5\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Python.GRS.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.ORMModels (1).executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.ORMModels.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.PhysicFunctions (1).executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.PhysicFunctions.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.PipeVelocityController.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.UtilFunctions.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.ValveSpeedController.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.Window.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.grs_interface.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.grs_main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;refactor&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Идель/PycharmProjects/NeVestaGRS&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Андрей\\PycharmProjects\\NeVestaGRS\\core\\model\" />\r\n      <recent name=\"C:\\Users\\Андрей\\PycharmProjects\\NeVestaGRS\\core\\controller\" />\r\n      <recent name=\"C:\\Users\\Андрей\\PycharmProjects\\NeVestaGRS\\core\\model\\functions\" />\r\n      <recent name=\"C:\\Users\\Андрей\\PycharmProjects\\NeVestaGRS\\core\\model\\entity\" />\r\n      <recent name=\"C:\\Users\\Андрей\\PycharmProjects\\NeVestaGRS\\core\\view\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.main\">\r\n    <configuration name=\"ORMModels (1)\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NeVestaGRS\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/core/model/repository\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/core/model/repository/ORMModels.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"ORMModels\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NeVestaGRS\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/core/model/repository\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"C:\\Users\\Андрей\\PycharmProjects\\NeVestaGRS\\core\\model\\repository\\ORMModels.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"UtilFunctions\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NeVestaGRS\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/core/model/functions\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"C:\\Users\\Андрей\\PycharmProjects\\NeVestaGRS\\core\\controller\\UtilFunctions.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"grs_main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NeVestaGRS\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/core\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/core/grs_main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NeVestaGRS\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/core\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/core/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Python.ORMModels (1)\" />\r\n      <item itemvalue=\"Python.ORMModels\" />\r\n      <item itemvalue=\"Python.UtilFunctions\" />\r\n      <item itemvalue=\"Python.grs_main\" />\r\n      <item itemvalue=\"Python.main\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main\" />\r\n        <item itemvalue=\"Python.ORMModels (1)\" />\r\n        <item itemvalue=\"Python.ORMModels\" />\r\n        <item itemvalue=\"Python.grs_main\" />\r\n        <item itemvalue=\"Python.UtilFunctions\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-ce3d9afa04ac-ba05f1cad1b1-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-242.20224.347\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f607f56e-4ff3-4da4-83f7-2cd0ed8438d4\" name=\"Changes\" comment=\"\" />\r\n      <created>1723550601327</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1723550601327</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Added controller package&#10;Added test package&#10;Added controllers for pipe velocity calculations&#10;Added constants.py for constant value source\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1723922418912</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1723922418912</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Fixed lambda function binding&#10;Binded all physic functions to buttons&#10;Binded clear field button&#10;Make declarative descriptions of default GUI\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724177806496</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724177806496</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Добавил SQLAlchemy и объектное представление таблиц grs, unit (ранее - blocks) и composition\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724702449686</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724702449686</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Added controller package&#10;Added test package&#10;Added controllers for pipe velocity calculations&#10;Added constants.py for constant value source\" />\r\n    <MESSAGE value=\"Fixed lambda function binding&#10;Binded all physic functions to buttons&#10;Binded clear field button&#10;Make declarative descriptions of default GUI\" />\r\n    <MESSAGE value=\"Добавил SQLAlchemy и объектное представление таблиц grs, unit (ранее - blocks) и composition\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Добавил SQLAlchemy и объектное представление таблиц grs, unit (ранее - blocks) и composition\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 15b30bdd2bfd29aa77450e27a17e3ead740036c1)
+++ b/.idea/workspace.xml	(date 1724863260871)
@@ -4,22 +4,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="f607f56e-4ff3-4da4-83f7-2cd0ed8438d4" name="Changes" comment="Добавил SQLAlchemy и объектное представление таблиц grs, unit (ранее - blocks) и composition">
-      <change afterPath="$PROJECT_DIR$/core/properties.yml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/core/view/AppContext.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/core/view/IView.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_08_2024_20_49_[Changes]1/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_08_2024_20_49__Changes_1.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_08_2024_18_22_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_08_2024_18_22__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_08_2024_8_52_[Changes]1/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_08_2024_8_52__Changes_1.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/controller/Controller.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/controller/Controller.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/grs_stat.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/grs_stat.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/main.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/view/Window.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/view/TkWindow.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/view/window_config.yml" beforeDir="false" afterPath="$PROJECT_DIR$/core/view/window_config.yml" afterDir="false" />
+    <list default="true" id="f607f56e-4ff3-4da4-83f7-2cd0ed8438d4" name="Changes" comment="Переработал модуль View:&#10;- Внедрил IoC и добавил класс TkAppContext, осуществляющий DI между вьюхой и логикой&#10;- Добавил класс TkGuiBuilder, взявший на себя функции создания объектов Tkinter'а&#10;- Добавил интерфейсы вьюхи IInput, IOutput, IView. Теперь Controller обращается только к этим интерфейсам вместо прямого обращению к Window&#10;- Упростил доступ к виджетам через хэшмап виджетов Window.widgets">
+      <change beforePath="$PROJECT_DIR$/core/view/TkWindow.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/view/TkWindow.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -272,7 +258,15 @@
       <option name="project" value="LOCAL" />
       <updated>1724702449686</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="Переработал модуль View">
+      <option name="closed" value="true" />
+      <created>1724862834775</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1724862834775</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -290,6 +284,8 @@
     <MESSAGE value="Added controller package&#10;Added test package&#10;Added controllers for pipe velocity calculations&#10;Added constants.py for constant value source" />
     <MESSAGE value="Fixed lambda function binding&#10;Binded all physic functions to buttons&#10;Binded clear field button&#10;Make declarative descriptions of default GUI" />
     <MESSAGE value="Добавил SQLAlchemy и объектное представление таблиц grs, unit (ранее - blocks) и composition" />
-    <option name="LAST_COMMIT_MESSAGE" value="Добавил SQLAlchemy и объектное представление таблиц grs, unit (ранее - blocks) и composition" />
+    <MESSAGE value="Переработал модуль View:&#10;- Внедрил IoC и добавил класс TkAppContext, осуществляющий DI между вьюхой и логикой&#10;- Добавил класс TkGuiBuilder, взявший на себя функции создания объектов Tkinter'а&#10;- Добавил интерфейсы вьюхи IInput, IOutput, IView. Теперь Controller обращается только к этим интерфейсам вместо прямого обращению к Window&#10;- Упростил доступ к виджетам через хэшмап виджетов Window.widgets" />
+    <MESSAGE value="Переработал модуль View:&#10;- Внедрил IoC и добавил класс TkAppContext, осуществляющий DI между вьюхой и логикой&#10;- Добавил класс TkGuiBuilder, взявший на себя функции создания объектов Tkinter'а&#10;- Добавил интерфейсы вьюхи IInput, IOutput, IView. Теперь Controller обращается только к этим интерфейсам вместо прямого обращению к Window&#10;- Упростил доступ к виджетам через хэшмап виджетов Window.widgets" />
+    <option name="LAST_COMMIT_MESSAGE" value="Переработал модуль View:&#10;- Внедрил IoC и добавил класс TkAppContext, осуществляющий DI между вьюхой и логикой&#10;- Добавил класс TkGuiBuilder, взявший на себя функции создания объектов Tkinter'а&#10;- Добавил интерфейсы вьюхи IInput, IOutput, IView. Теперь Controller обращается только к этим интерфейсам вместо прямого обращению к Window&#10;- Упростил доступ к виджетам через хэшмап виджетов Window.widgets" />
   </component>
 </project>
\ No newline at end of file
