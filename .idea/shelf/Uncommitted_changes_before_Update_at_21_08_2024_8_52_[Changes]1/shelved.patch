Index: core/model/functions/PhysicFunctions.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\n    Физические функции для обсчетов\r\n\"\"\"\r\n\r\nimport math\r\nfrom typing import Dict, Any\r\n\r\nfrom core.model.entity.Gas import Gas\r\nfrom core.model.entity.Pipeline import Pipeline\r\nimport core.model.functions.constants as CONST\r\n\r\n\r\ndef calc_pipe_velocity(composition: dict, temperature: float,\r\n                       pressure: float, rate: float, diameter: float,\r\n                       wall: float, fluid_pack: str = 'PR'):\r\n    \"\"\"\r\n    This function calculates the velocity of fluid in pipe.\r\n\r\n    :param composition: per component molar composition of fluid;\r\n    :param temperature: temperature of fluid, °C;\r\n    :param pressure: fluid pressure over atmospheric, MPa;\r\n    :param rate: fluid volume rate in standard cubic meters per hour;\r\n    :param diameter: external diameter of pipe, mm;\r\n    :param wall: pipeshell thickness, mm;\r\n    :param fluid_pack: fluid thermodynamic pack:\r\n    :return velocity (float): the velocity of fluid in pipe\r\n    \"\"\"\r\n    gas = Gas(composition, fluid_pack)\r\n    pipe = Pipeline(diameter, wall)\r\n    velocity = gas.get_rate(temperature, pressure, rate, parameter='actual') / pipe.area / 3600\r\n    return {\r\n        'pipe_velocity': velocity\r\n    }\r\n\r\ndef calc_gas_density(composition: dict, fluid_pack: str = 'PR'):\r\n    \"\"\"\r\n    This function calculates the density of fluid for normal and standard conditions\r\n\r\n    :param composition: per component molar composition of fluid;\r\n    :param fluid_pack: fluid thermodynamic pack:\r\n    :return normal_density, standard_density (float): densities for normal and standard conditions\r\n    \"\"\"\r\n    gas = Gas(composition, fluid_pack)\r\n    result = {\r\n        'normal_density': gas.get_normal_density(),\r\n        'standard_density': gas.get_standard_density()\r\n    }\r\n    return result\r\n\r\ndef calc_pipe_diameter(composition: dict, temperature: float, pressure: float, rate: float, fluid_pack: str = 'PR') :\r\n    \"\"\"\r\n    This function calculates minimal requests diameter of pipe for current volume rate of fluid for velocity=25 mps\r\n\r\n    :param composition: per component molar composition of fluid;\r\n    :param temperature: temperature of fluid, °C;\r\n    :param pressure: fluid pressure over atmospheric, MPa;\r\n    :param rate: fluid volume rate in standard cubic meters per hour;\r\n    :param fluid_pack: fluid thermodynamic pack:\r\n    :return minimal_diameter (float): minimal requests pipeshell diameter\r\n    \"\"\"\r\n    gas = Gas(composition, fluid_pack)\r\n    minimal_diameter = 1000 * (gas.get_rate(temperature, pressure, rate, parameter='actual') / 3600 / 25 * 4 / math.pi) ** 0.5\r\n    return  {\r\n        'minimal_diameter': minimal_diameter\r\n    }\r\n\r\n\r\ndef odorant_reserve_calc(rate: float, volume: float) -> dict[str, float]:\r\n    \"\"\"\r\n    This function calculates numbers of days for maximal rate of gas to odorate gas\r\n\r\n    :param rate: fluid volume rate in standard cubic meters per hour;\r\n    :param volume: volume of odorant vessel\r\n    :return odorant_reserve (float): numbers of days for maximal rate of gas to odorate gas\r\n    \"\"\"\r\n    mass_per_thousand_cubic_meters = 0.016 # кг одоранта на 1000 м3\r\n    odorant_density = 830 # кг/м3 - плотность одоранта\r\n    reserve = volume * odorant_density * 0.85 * 1000 / rate / mass_per_thousand_cubic_meters / 24\r\n    return {\r\n        'odorant_reserve': reserve\r\n    }\r\n\r\n\r\ndef odorant_reserve_verdict(rate: float, volume:float) -> bool:\r\n    \"\"\"\r\n    This function return final verdict for odorant vessel\r\n    :param rate: fluid volume rate in standard cubic meters per hour;\r\n    :param volume: volume of odorant vessel\r\n    :return (bool):\r\n    \"\"\"\r\n    if odorant_reserve_calc(rate, volume)['odorant_reserve'] >= 60:\r\n        return True\r\n    else:\r\n        return False\r\n\r\n\r\ndef odorant_volume_request(rate: float) -> dict[str, float]:\r\n    \"\"\"\r\n    This function calculates requested odorant volume\r\n    :param rate: fluid volume rate in standard cubic meters per hour;\r\n    60 - number of days\r\n    24 - hours in day\r\n    0.016 - odorant mass rate per thousand cubic meters of gas СТО Газпром 2-3.5-051-2006, пункт 9.7.6\r\n    830 - odorant density\r\n    0.85 - 85% retard of odorant vessel\r\n    :return:\r\n    \"\"\"\r\n    odorant_request = 60 * 24 * 0.016 * rate / 1000 / 830 / 0.85\r\n    return {\r\n        'odorant_request': odorant_request\r\n    }\r\n\r\n\r\ndef valve_capacity_calc(composition: dict, kv: int, inlet_pressure: float, outlet_pressure: float, temperature: float, fluid_pack = 'PR') -> \\\r\ndict[str, float | Any]:\r\n    \"\"\"\r\n    This function calculates capacity of valve by this fashion:\r\n        https://dpva.ru/Guide/GuideEquipment/Valves/ControlValvesChoosingDPVA/?ysclid=lzwoz0zt3y667024699\r\n    :param composition: per component molar composition of fluid;\r\n    :param kv: volume of liquid of density 1000 with pressure drop 1 bar\r\n    :param inlet_pressure: pressure before valve\r\n    :param outlet_pressure: pressure after valve\r\n    :param temperature: temperature of fluid, °C;\r\n    :param fluid_pack: fluid thermodynamic pack:\r\n    :return rate (float):\r\n    \"\"\"\r\n    gas = Gas(composition, fluid_pack)\r\n    temperature += CONST.CELSIUS_TO_KELVIN_SHIFT\r\n    inlet_pressure = (inlet_pressure + CONST.PASCAL_TO_ATM / 1e6) * 1e6 / 98100\r\n    outlet_pressure = (outlet_pressure + CONST.PASCAL_TO_ATM / 1e6) * 1e6 / 98100\r\n    gas_density = gas.get_normal_density()\r\n    delta_pressure = inlet_pressure - outlet_pressure\r\n    if delta_pressure < inlet_pressure / 2:\r\n        mass_rate = (529 / temperature) * kv * (delta_pressure * outlet_pressure * gas_density * temperature) ** 0.5\r\n    else:\r\n        mass_rate = 265 * inlet_pressure * kv * (gas_density / temperature) ** 0.5\r\n    standard_rate = mass_rate / gas.get_standard_density()\r\n    return {\r\n        'valve_rate': standard_rate\r\n    }\r\n\r\n\r\ndef valve_kv_calc(composition: dict, rate: float, inlet_pressure: float, outlet_pressure: float, temperature: float, fluid_pack='PR') -> \\\r\ndict[str, float | Any]:\r\n    \"\"\"\r\n    This function calculates requests kv for gas rate\r\n    :param composition: per component molar composition of fluid;\r\n    :param rate: fluid volume rate in standard cubic meters per hour;\r\n    :param inlet_pressure: pressure before valve\r\n    :param outlet_pressure: pressure after valve\r\n    :param fluid_pack: fluid thermodynamic pack:\r\n    :return kv (float): volume of liquid of density 1000 with pressure drop 1 bar\r\n    \"\"\"\r\n    gas = Gas(composition, fluid_pack)\r\n    temperature += CONST.CELSIUS_TO_KELVIN_SHIFT\r\n    inlet_pressure = (inlet_pressure + CONST.PASCAL_TO_ATM / 1e6) * 1e6 / 98100\r\n    outlet_pressure = (outlet_pressure + CONST.PASCAL_TO_ATM / 1e6) * 1e6 / 98100\r\n    gas_density = gas.get_normal_density()\r\n    mass_rate = rate * gas.get_standard_density()\r\n    delta_pressure = inlet_pressure - outlet_pressure\r\n\r\n    if delta_pressure < inlet_pressure / 2:\r\n        kv = mass_rate * temperature / 529 / (delta_pressure * outlet_pressure\r\n                                                                      * gas_density * temperature) ** 0.5\r\n    else:\r\n        kv = mass_rate / 265 / inlet_pressure * (temperature / gas_density) ** 0.5\r\n    return {\r\n        'kv': kv\r\n    }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/model/functions/PhysicFunctions.py b/core/model/functions/PhysicFunctions.py
--- a/core/model/functions/PhysicFunctions.py	(revision e9af9fe045a8ff5af5087443280f0a686cf7abf8)
+++ b/core/model/functions/PhysicFunctions.py	(date 1724158749217)
@@ -22,7 +22,7 @@
     :param rate: fluid volume rate in standard cubic meters per hour;
     :param diameter: external diameter of pipe, mm;
     :param wall: pipeshell thickness, mm;
-    :param fluid_pack: fluid thermodynamic pack:
+    :param fluid_pack: fluid thermodynamic pack.
     :return velocity (float): the velocity of fluid in pipe
     """
     gas = Gas(composition, fluid_pack)
Index: core/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from core.controller.Controller import Controller\r\nfrom core.view.GRSWindow import GRSWindow\r\n\r\nif __name__ == '__main__':\r\n    window = GRSWindow('НеВеста-ГРС')\r\n    window.bind_controller(Controller())\r\n    window.load_window_menu()\r\n    window.mainloop()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/main.py b/core/main.py
--- a/core/main.py	(revision e9af9fe045a8ff5af5087443280f0a686cf7abf8)
+++ b/core/main.py	(date 1724212097253)
@@ -1,5 +1,6 @@
 from core.controller.Controller import Controller
 from core.view.GRSWindow import GRSWindow
+from test.functions.PhysicFunctions import *
 
 if __name__ == '__main__':
     window = GRSWindow('НеВеста-ГРС')
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f607f56e-4ff3-4da4-83f7-2cd0ed8438d4\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/model/entity/Gas.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/model/entity/Gas.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/model/functions/PhysicFunctions.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/model/functions/PhysicFunctions.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/core/view/GRSWindow.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/view/GRSWindow.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test/functions/PhysicFunctions.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/test/functions/PhysicFunctions.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"dev\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;AndrewDanie&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/AndrewDanie/NeVestaGRS.git&quot;,\r\n    &quot;accountId&quot;: &quot;ed38cc08-3701-4c6e-998c-82fb90dedef4&quot;\r\n  },\r\n  &quot;recentNewPullRequestHead&quot;: {\r\n    &quot;server&quot;: {\r\n      &quot;useHttp&quot;: false,\r\n      &quot;host&quot;: &quot;github.com&quot;,\r\n      &quot;port&quot;: null,\r\n      &quot;suffix&quot;: null\r\n    },\r\n    &quot;owner&quot;: &quot;AndrewDanie&quot;,\r\n    &quot;repository&quot;: &quot;NeVestaGRS&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2kbS5lXM97mLkVvePb8v6kD8Jp5\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.PhysicFunctions (1).executor\": \"Run\",\r\n    \"Python.PhysicFunctions.executor\": \"Run\",\r\n    \"Python.Window.executor\": \"Run\",\r\n    \"Python.grs_interface.executor\": \"Run\",\r\n    \"Python.main.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"#1 on refactor\",\r\n    \"last_opened_file_path\": \"C:/Users/Идель/PycharmProjects/NeVestaGRS\",\r\n    \"settings.editor.selected.configurable\": \"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\PetProjects\\NeVestaGRS\\core\\gui\" />\r\n      <recent name=\"D:\\PetProjects\\NeVestaGRS\\core\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.PhysicFunctions (1)\">\r\n    <configuration name=\"PhysicFunctions (1)\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NeVestaGRS\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/test/functions\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/test/functions/PhysicFunctions.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"PhysicFunctions\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NeVestaGRS\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/core/functions\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/core/functions/PhysicFunctions.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Window\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NeVestaGRS\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/core/gui\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/core/gui/Window.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"grs_interface\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NeVestaGRS\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/core/gui\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/core/gui/grs_interface.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NeVestaGRS\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/core\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/core/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Python.PhysicFunctions (1)\" />\r\n      <item itemvalue=\"Python.grs_interface\" />\r\n      <item itemvalue=\"Python.main\" />\r\n      <item itemvalue=\"Python.PhysicFunctions\" />\r\n      <item itemvalue=\"Python.Window\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.PhysicFunctions (1)\" />\r\n        <item itemvalue=\"Python.main\" />\r\n        <item itemvalue=\"Python.PhysicFunctions\" />\r\n        <item itemvalue=\"Python.grs_interface\" />\r\n        <item itemvalue=\"Python.Window\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-ce3d9afa04ac-ba05f1cad1b1-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-242.20224.347\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f607f56e-4ff3-4da4-83f7-2cd0ed8438d4\" name=\"Changes\" comment=\"\" />\r\n      <created>1723550601327</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1723550601327</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision e9af9fe045a8ff5af5087443280f0a686cf7abf8)
+++ b/.idea/workspace.xml	(date 1724165593688)
@@ -4,11 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="f607f56e-4ff3-4da4-83f7-2cd0ed8438d4" name="Changes" comment="">
+    <list default="true" id="f607f56e-4ff3-4da4-83f7-2cd0ed8438d4" name="Changes" comment="Added test_functions for PhysicFu">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/model/entity/Gas.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/model/entity/Gas.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/main.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/core/model/functions/PhysicFunctions.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/model/functions/PhysicFunctions.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/view/GRSWindow.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/view/GRSWindow.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/test/functions/PhysicFunctions.py" beforeDir="false" afterPath="$PROJECT_DIR$/test/functions/PhysicFunctions.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -81,7 +80,7 @@
       <recent name="D:\PetProjects\NeVestaGRS\core" />
     </key>
   </component>
-  <component name="RunManager" selected="Python.PhysicFunctions (1)">
+  <component name="RunManager" selected="Python.main">
     <configuration name="PhysicFunctions (1)" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="NeVestaGRS" />
       <option name="ENV_FILES" value="" />
@@ -201,8 +200,8 @@
     </list>
     <recent_temporary>
       <list>
-        <item itemvalue="Python.PhysicFunctions (1)" />
         <item itemvalue="Python.main" />
+        <item itemvalue="Python.PhysicFunctions (1)" />
         <item itemvalue="Python.PhysicFunctions" />
         <item itemvalue="Python.grs_interface" />
         <item itemvalue="Python.Window" />
@@ -225,6 +224,15 @@
       <option name="presentableId" value="Default" />
       <updated>1723550601327</updated>
     </task>
+    <task id="LOCAL-00001" summary="Added test_functions for PhysicFu">
+      <option name="closed" value="true" />
+      <created>1724157968554</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1724157968554</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -238,4 +246,8 @@
       </map>
     </option>
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Added test_functions for PhysicFu" />
+    <option name="LAST_COMMIT_MESSAGE" value="Added test_functions for PhysicFu" />
+  </component>
 </project>
\ No newline at end of file
